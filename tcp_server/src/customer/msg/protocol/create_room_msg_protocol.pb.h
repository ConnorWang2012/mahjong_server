// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: create_room_msg_protocol.proto

#ifndef PROTOBUF_create_5froom_5fmsg_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_create_5froom_5fmsg_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamer {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_create_5froom_5fmsg_5fprotocol_2eproto();
void protobuf_AssignDesc_create_5froom_5fmsg_5fprotocol_2eproto();
void protobuf_ShutdownFile_create_5froom_5fmsg_5fprotocol_2eproto();

class CreateRoomMsgProtocol;

// ===================================================================

class CreateRoomMsgProtocol : public ::google::protobuf::Message {
 public:
  CreateRoomMsgProtocol();
  virtual ~CreateRoomMsgProtocol();

  CreateRoomMsgProtocol(const CreateRoomMsgProtocol& from);

  inline CreateRoomMsgProtocol& operator=(const CreateRoomMsgProtocol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomMsgProtocol& default_instance();

  void Swap(CreateRoomMsgProtocol* other);

  // implements Message ----------------------------------------------

  CreateRoomMsgProtocol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRoomMsgProtocol& from);
  void MergeFrom(const CreateRoomMsgProtocol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rounds_num = 1;
  inline bool has_rounds_num() const;
  inline void clear_rounds_num();
  static const int kRoundsNumFieldNumber = 1;
  inline ::google::protobuf::int32 rounds_num() const;
  inline void set_rounds_num(::google::protobuf::int32 value);

  // required int32 players_num = 2;
  inline bool has_players_num() const;
  inline void clear_players_num();
  static const int kPlayersNumFieldNumber = 2;
  inline ::google::protobuf::int32 players_num() const;
  inline void set_players_num(::google::protobuf::int32 value);

  // optional int32 room_cards_num = 3 [default = 0];
  inline bool has_room_cards_num() const;
  inline void clear_room_cards_num();
  static const int kRoomCardsNumFieldNumber = 3;
  inline ::google::protobuf::int32 room_cards_num() const;
  inline void set_room_cards_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamer.protocol.CreateRoomMsgProtocol)
 private:
  inline void set_has_rounds_num();
  inline void clear_has_rounds_num();
  inline void set_has_players_num();
  inline void clear_has_players_num();
  inline void set_has_room_cards_num();
  inline void clear_has_room_cards_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rounds_num_;
  ::google::protobuf::int32 players_num_;
  ::google::protobuf::int32 room_cards_num_;
  friend void  protobuf_AddDesc_create_5froom_5fmsg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_create_5froom_5fmsg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_create_5froom_5fmsg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CreateRoomMsgProtocol* default_instance_;
};
// ===================================================================


// ===================================================================

// CreateRoomMsgProtocol

// required int32 rounds_num = 1;
inline bool CreateRoomMsgProtocol::has_rounds_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomMsgProtocol::set_has_rounds_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomMsgProtocol::clear_has_rounds_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomMsgProtocol::clear_rounds_num() {
  rounds_num_ = 0;
  clear_has_rounds_num();
}
inline ::google::protobuf::int32 CreateRoomMsgProtocol::rounds_num() const {
  // @@protoc_insertion_point(field_get:gamer.protocol.CreateRoomMsgProtocol.rounds_num)
  return rounds_num_;
}
inline void CreateRoomMsgProtocol::set_rounds_num(::google::protobuf::int32 value) {
  set_has_rounds_num();
  rounds_num_ = value;
  // @@protoc_insertion_point(field_set:gamer.protocol.CreateRoomMsgProtocol.rounds_num)
}

// required int32 players_num = 2;
inline bool CreateRoomMsgProtocol::has_players_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomMsgProtocol::set_has_players_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomMsgProtocol::clear_has_players_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomMsgProtocol::clear_players_num() {
  players_num_ = 0;
  clear_has_players_num();
}
inline ::google::protobuf::int32 CreateRoomMsgProtocol::players_num() const {
  // @@protoc_insertion_point(field_get:gamer.protocol.CreateRoomMsgProtocol.players_num)
  return players_num_;
}
inline void CreateRoomMsgProtocol::set_players_num(::google::protobuf::int32 value) {
  set_has_players_num();
  players_num_ = value;
  // @@protoc_insertion_point(field_set:gamer.protocol.CreateRoomMsgProtocol.players_num)
}

// optional int32 room_cards_num = 3 [default = 0];
inline bool CreateRoomMsgProtocol::has_room_cards_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoomMsgProtocol::set_has_room_cards_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoomMsgProtocol::clear_has_room_cards_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoomMsgProtocol::clear_room_cards_num() {
  room_cards_num_ = 0;
  clear_has_room_cards_num();
}
inline ::google::protobuf::int32 CreateRoomMsgProtocol::room_cards_num() const {
  // @@protoc_insertion_point(field_get:gamer.protocol.CreateRoomMsgProtocol.room_cards_num)
  return room_cards_num_;
}
inline void CreateRoomMsgProtocol::set_room_cards_num(::google::protobuf::int32 value) {
  set_has_room_cards_num();
  room_cards_num_ = value;
  // @@protoc_insertion_point(field_set:gamer.protocol.CreateRoomMsgProtocol.room_cards_num)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace gamer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_create_5froom_5fmsg_5fprotocol_2eproto__INCLUDED
