// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personal_head_portrait_msg_protocol.proto

#ifndef PROTOBUF_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamer {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto();
void protobuf_AssignDesc_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto();
void protobuf_ShutdownFile_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto();

class PersonalHeadPortraitMsgProtocol;

// ===================================================================

class PersonalHeadPortraitMsgProtocol : public ::google::protobuf::Message {
 public:
  PersonalHeadPortraitMsgProtocol();
  virtual ~PersonalHeadPortraitMsgProtocol();

  PersonalHeadPortraitMsgProtocol(const PersonalHeadPortraitMsgProtocol& from);

  inline PersonalHeadPortraitMsgProtocol& operator=(const PersonalHeadPortraitMsgProtocol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonalHeadPortraitMsgProtocol& default_instance();

  void Swap(PersonalHeadPortraitMsgProtocol* other);

  // implements Message ----------------------------------------------

  PersonalHeadPortraitMsgProtocol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PersonalHeadPortraitMsgProtocol& from);
  void MergeFrom(const PersonalHeadPortraitMsgProtocol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 player_id() const;
  inline void set_player_id(::google::protobuf::uint32 value);

  // optional bytes head_portrait = 2;
  inline bool has_head_portrait() const;
  inline void clear_head_portrait();
  static const int kHeadPortraitFieldNumber = 2;
  inline const ::std::string& head_portrait() const;
  inline void set_head_portrait(const ::std::string& value);
  inline void set_head_portrait(const char* value);
  inline void set_head_portrait(const void* value, size_t size);
  inline ::std::string* mutable_head_portrait();
  inline ::std::string* release_head_portrait();
  inline void set_allocated_head_portrait(::std::string* head_portrait);

  // @@protoc_insertion_point(class_scope:gamer.protocol.PersonalHeadPortraitMsgProtocol)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_head_portrait();
  inline void clear_has_head_portrait();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* head_portrait_;
  ::google::protobuf::uint32 player_id_;
  friend void  protobuf_AddDesc_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PersonalHeadPortraitMsgProtocol* default_instance_;
};
// ===================================================================


// ===================================================================

// PersonalHeadPortraitMsgProtocol

// required uint32 player_id = 1;
inline bool PersonalHeadPortraitMsgProtocol::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PersonalHeadPortraitMsgProtocol::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PersonalHeadPortraitMsgProtocol::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PersonalHeadPortraitMsgProtocol::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 PersonalHeadPortraitMsgProtocol::player_id() const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PersonalHeadPortraitMsgProtocol.player_id)
  return player_id_;
}
inline void PersonalHeadPortraitMsgProtocol::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:gamer.protocol.PersonalHeadPortraitMsgProtocol.player_id)
}

// optional bytes head_portrait = 2;
inline bool PersonalHeadPortraitMsgProtocol::has_head_portrait() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PersonalHeadPortraitMsgProtocol::set_has_head_portrait() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PersonalHeadPortraitMsgProtocol::clear_has_head_portrait() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PersonalHeadPortraitMsgProtocol::clear_head_portrait() {
  if (head_portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_->clear();
  }
  clear_has_head_portrait();
}
inline const ::std::string& PersonalHeadPortraitMsgProtocol::head_portrait() const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PersonalHeadPortraitMsgProtocol.head_portrait)
  return *head_portrait_;
}
inline void PersonalHeadPortraitMsgProtocol::set_head_portrait(const ::std::string& value) {
  set_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_ = new ::std::string;
  }
  head_portrait_->assign(value);
  // @@protoc_insertion_point(field_set:gamer.protocol.PersonalHeadPortraitMsgProtocol.head_portrait)
}
inline void PersonalHeadPortraitMsgProtocol::set_head_portrait(const char* value) {
  set_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_ = new ::std::string;
  }
  head_portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:gamer.protocol.PersonalHeadPortraitMsgProtocol.head_portrait)
}
inline void PersonalHeadPortraitMsgProtocol::set_head_portrait(const void* value, size_t size) {
  set_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_ = new ::std::string;
  }
  head_portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gamer.protocol.PersonalHeadPortraitMsgProtocol.head_portrait)
}
inline ::std::string* PersonalHeadPortraitMsgProtocol::mutable_head_portrait() {
  set_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gamer.protocol.PersonalHeadPortraitMsgProtocol.head_portrait)
  return head_portrait_;
}
inline ::std::string* PersonalHeadPortraitMsgProtocol::release_head_portrait() {
  clear_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = head_portrait_;
    head_portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PersonalHeadPortraitMsgProtocol::set_allocated_head_portrait(::std::string* head_portrait) {
  if (head_portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete head_portrait_;
  }
  if (head_portrait) {
    set_has_head_portrait();
    head_portrait_ = head_portrait;
  } else {
    clear_has_head_portrait();
    head_portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gamer.protocol.PersonalHeadPortraitMsgProtocol.head_portrait)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace gamer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_personal_5fhead_5fportrait_5fmsg_5fprotocol_2eproto__INCLUDED
