// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_cards_msg_protocol.proto

#ifndef PROTOBUF_player_5fcards_5fmsg_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_player_5fcards_5fmsg_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamer {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_player_5fcards_5fmsg_5fprotocol_2eproto();
void protobuf_AssignDesc_player_5fcards_5fmsg_5fprotocol_2eproto();
void protobuf_ShutdownFile_player_5fcards_5fmsg_5fprotocol_2eproto();

class PlayerCardsMsgProtocol;

// ===================================================================

class PlayerCardsMsgProtocol : public ::google::protobuf::Message {
 public:
  PlayerCardsMsgProtocol();
  virtual ~PlayerCardsMsgProtocol();

  PlayerCardsMsgProtocol(const PlayerCardsMsgProtocol& from);

  inline PlayerCardsMsgProtocol& operator=(const PlayerCardsMsgProtocol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCardsMsgProtocol& default_instance();

  void Swap(PlayerCardsMsgProtocol* other);

  // implements Message ----------------------------------------------

  PlayerCardsMsgProtocol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerCardsMsgProtocol& from);
  void MergeFrom(const PlayerCardsMsgProtocol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1 [default = 0];
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // repeated int32 visible_hand_cards = 2;
  inline int visible_hand_cards_size() const;
  inline void clear_visible_hand_cards();
  static const int kVisibleHandCardsFieldNumber = 2;
  inline ::google::protobuf::int32 visible_hand_cards(int index) const;
  inline void set_visible_hand_cards(int index, ::google::protobuf::int32 value);
  inline void add_visible_hand_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      visible_hand_cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_visible_hand_cards();

  // repeated int32 invisible_hand_cards = 3;
  inline int invisible_hand_cards_size() const;
  inline void clear_invisible_hand_cards();
  static const int kInvisibleHandCardsFieldNumber = 3;
  inline ::google::protobuf::int32 invisible_hand_cards(int index) const;
  inline void set_invisible_hand_cards(int index, ::google::protobuf::int32 value);
  inline void add_invisible_hand_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      invisible_hand_cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_invisible_hand_cards();

  // repeated int32 flower_cards = 4;
  inline int flower_cards_size() const;
  inline void clear_flower_cards();
  static const int kFlowerCardsFieldNumber = 4;
  inline ::google::protobuf::int32 flower_cards(int index) const;
  inline void set_flower_cards(int index, ::google::protobuf::int32 value);
  inline void add_flower_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flower_cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flower_cards();

  // repeated int32 season_cards = 5;
  inline int season_cards_size() const;
  inline void clear_season_cards();
  static const int kSeasonCardsFieldNumber = 5;
  inline ::google::protobuf::int32 season_cards(int index) const;
  inline void set_season_cards(int index, ::google::protobuf::int32 value);
  inline void add_season_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      season_cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_season_cards();

  // repeated int32 waiting_cards = 6;
  inline int waiting_cards_size() const;
  inline void clear_waiting_cards();
  static const int kWaitingCardsFieldNumber = 6;
  inline ::google::protobuf::int32 waiting_cards(int index) const;
  inline void set_waiting_cards(int index, ::google::protobuf::int32 value);
  inline void add_waiting_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      waiting_cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_waiting_cards();

  // @@protoc_insertion_point(class_scope:gamer.protocol.PlayerCardsMsgProtocol)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > visible_hand_cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > invisible_hand_cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flower_cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > season_cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > waiting_cards_;
  ::google::protobuf::int32 player_id_;
  friend void  protobuf_AddDesc_player_5fcards_5fmsg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_player_5fcards_5fmsg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_player_5fcards_5fmsg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PlayerCardsMsgProtocol* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerCardsMsgProtocol

// optional int32 player_id = 1 [default = 0];
inline bool PlayerCardsMsgProtocol::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCardsMsgProtocol::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerCardsMsgProtocol::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerCardsMsgProtocol::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 PlayerCardsMsgProtocol::player_id() const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PlayerCardsMsgProtocol.player_id)
  return player_id_;
}
inline void PlayerCardsMsgProtocol::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:gamer.protocol.PlayerCardsMsgProtocol.player_id)
}

// repeated int32 visible_hand_cards = 2;
inline int PlayerCardsMsgProtocol::visible_hand_cards_size() const {
  return visible_hand_cards_.size();
}
inline void PlayerCardsMsgProtocol::clear_visible_hand_cards() {
  visible_hand_cards_.Clear();
}
inline ::google::protobuf::int32 PlayerCardsMsgProtocol::visible_hand_cards(int index) const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PlayerCardsMsgProtocol.visible_hand_cards)
  return visible_hand_cards_.Get(index);
}
inline void PlayerCardsMsgProtocol::set_visible_hand_cards(int index, ::google::protobuf::int32 value) {
  visible_hand_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:gamer.protocol.PlayerCardsMsgProtocol.visible_hand_cards)
}
inline void PlayerCardsMsgProtocol::add_visible_hand_cards(::google::protobuf::int32 value) {
  visible_hand_cards_.Add(value);
  // @@protoc_insertion_point(field_add:gamer.protocol.PlayerCardsMsgProtocol.visible_hand_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerCardsMsgProtocol::visible_hand_cards() const {
  // @@protoc_insertion_point(field_list:gamer.protocol.PlayerCardsMsgProtocol.visible_hand_cards)
  return visible_hand_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerCardsMsgProtocol::mutable_visible_hand_cards() {
  // @@protoc_insertion_point(field_mutable_list:gamer.protocol.PlayerCardsMsgProtocol.visible_hand_cards)
  return &visible_hand_cards_;
}

// repeated int32 invisible_hand_cards = 3;
inline int PlayerCardsMsgProtocol::invisible_hand_cards_size() const {
  return invisible_hand_cards_.size();
}
inline void PlayerCardsMsgProtocol::clear_invisible_hand_cards() {
  invisible_hand_cards_.Clear();
}
inline ::google::protobuf::int32 PlayerCardsMsgProtocol::invisible_hand_cards(int index) const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PlayerCardsMsgProtocol.invisible_hand_cards)
  return invisible_hand_cards_.Get(index);
}
inline void PlayerCardsMsgProtocol::set_invisible_hand_cards(int index, ::google::protobuf::int32 value) {
  invisible_hand_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:gamer.protocol.PlayerCardsMsgProtocol.invisible_hand_cards)
}
inline void PlayerCardsMsgProtocol::add_invisible_hand_cards(::google::protobuf::int32 value) {
  invisible_hand_cards_.Add(value);
  // @@protoc_insertion_point(field_add:gamer.protocol.PlayerCardsMsgProtocol.invisible_hand_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerCardsMsgProtocol::invisible_hand_cards() const {
  // @@protoc_insertion_point(field_list:gamer.protocol.PlayerCardsMsgProtocol.invisible_hand_cards)
  return invisible_hand_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerCardsMsgProtocol::mutable_invisible_hand_cards() {
  // @@protoc_insertion_point(field_mutable_list:gamer.protocol.PlayerCardsMsgProtocol.invisible_hand_cards)
  return &invisible_hand_cards_;
}

// repeated int32 flower_cards = 4;
inline int PlayerCardsMsgProtocol::flower_cards_size() const {
  return flower_cards_.size();
}
inline void PlayerCardsMsgProtocol::clear_flower_cards() {
  flower_cards_.Clear();
}
inline ::google::protobuf::int32 PlayerCardsMsgProtocol::flower_cards(int index) const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PlayerCardsMsgProtocol.flower_cards)
  return flower_cards_.Get(index);
}
inline void PlayerCardsMsgProtocol::set_flower_cards(int index, ::google::protobuf::int32 value) {
  flower_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:gamer.protocol.PlayerCardsMsgProtocol.flower_cards)
}
inline void PlayerCardsMsgProtocol::add_flower_cards(::google::protobuf::int32 value) {
  flower_cards_.Add(value);
  // @@protoc_insertion_point(field_add:gamer.protocol.PlayerCardsMsgProtocol.flower_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerCardsMsgProtocol::flower_cards() const {
  // @@protoc_insertion_point(field_list:gamer.protocol.PlayerCardsMsgProtocol.flower_cards)
  return flower_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerCardsMsgProtocol::mutable_flower_cards() {
  // @@protoc_insertion_point(field_mutable_list:gamer.protocol.PlayerCardsMsgProtocol.flower_cards)
  return &flower_cards_;
}

// repeated int32 season_cards = 5;
inline int PlayerCardsMsgProtocol::season_cards_size() const {
  return season_cards_.size();
}
inline void PlayerCardsMsgProtocol::clear_season_cards() {
  season_cards_.Clear();
}
inline ::google::protobuf::int32 PlayerCardsMsgProtocol::season_cards(int index) const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PlayerCardsMsgProtocol.season_cards)
  return season_cards_.Get(index);
}
inline void PlayerCardsMsgProtocol::set_season_cards(int index, ::google::protobuf::int32 value) {
  season_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:gamer.protocol.PlayerCardsMsgProtocol.season_cards)
}
inline void PlayerCardsMsgProtocol::add_season_cards(::google::protobuf::int32 value) {
  season_cards_.Add(value);
  // @@protoc_insertion_point(field_add:gamer.protocol.PlayerCardsMsgProtocol.season_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerCardsMsgProtocol::season_cards() const {
  // @@protoc_insertion_point(field_list:gamer.protocol.PlayerCardsMsgProtocol.season_cards)
  return season_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerCardsMsgProtocol::mutable_season_cards() {
  // @@protoc_insertion_point(field_mutable_list:gamer.protocol.PlayerCardsMsgProtocol.season_cards)
  return &season_cards_;
}

// repeated int32 waiting_cards = 6;
inline int PlayerCardsMsgProtocol::waiting_cards_size() const {
  return waiting_cards_.size();
}
inline void PlayerCardsMsgProtocol::clear_waiting_cards() {
  waiting_cards_.Clear();
}
inline ::google::protobuf::int32 PlayerCardsMsgProtocol::waiting_cards(int index) const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PlayerCardsMsgProtocol.waiting_cards)
  return waiting_cards_.Get(index);
}
inline void PlayerCardsMsgProtocol::set_waiting_cards(int index, ::google::protobuf::int32 value) {
  waiting_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:gamer.protocol.PlayerCardsMsgProtocol.waiting_cards)
}
inline void PlayerCardsMsgProtocol::add_waiting_cards(::google::protobuf::int32 value) {
  waiting_cards_.Add(value);
  // @@protoc_insertion_point(field_add:gamer.protocol.PlayerCardsMsgProtocol.waiting_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerCardsMsgProtocol::waiting_cards() const {
  // @@protoc_insertion_point(field_list:gamer.protocol.PlayerCardsMsgProtocol.waiting_cards)
  return waiting_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerCardsMsgProtocol::mutable_waiting_cards() {
  // @@protoc_insertion_point(field_mutable_list:gamer.protocol.PlayerCardsMsgProtocol.waiting_cards)
  return &waiting_cards_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace gamer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_player_5fcards_5fmsg_5fprotocol_2eproto__INCLUDED
