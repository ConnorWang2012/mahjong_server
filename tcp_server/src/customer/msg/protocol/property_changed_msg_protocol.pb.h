// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: property_changed_msg_protocol.proto

#ifndef PROTOBUF_property_5fchanged_5fmsg_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_property_5fchanged_5fmsg_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamer {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_property_5fchanged_5fmsg_5fprotocol_2eproto();
void protobuf_AssignDesc_property_5fchanged_5fmsg_5fprotocol_2eproto();
void protobuf_ShutdownFile_property_5fchanged_5fmsg_5fprotocol_2eproto();

class PropertyChangedMsgProtocol;

// ===================================================================

class PropertyChangedMsgProtocol : public ::google::protobuf::Message {
 public:
  PropertyChangedMsgProtocol();
  virtual ~PropertyChangedMsgProtocol();

  PropertyChangedMsgProtocol(const PropertyChangedMsgProtocol& from);

  inline PropertyChangedMsgProtocol& operator=(const PropertyChangedMsgProtocol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyChangedMsgProtocol& default_instance();

  void Swap(PropertyChangedMsgProtocol* other);

  // implements Message ----------------------------------------------

  PropertyChangedMsgProtocol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropertyChangedMsgProtocol& from);
  void MergeFrom(const PropertyChangedMsgProtocol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 player_id() const;
  inline void set_player_id(::google::protobuf::uint32 value);

  // repeated uint32 property_ids = 2;
  inline int property_ids_size() const;
  inline void clear_property_ids();
  static const int kPropertyIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 property_ids(int index) const;
  inline void set_property_ids(int index, ::google::protobuf::uint32 value);
  inline void add_property_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      property_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_property_ids();

  // repeated string new_properties = 3;
  inline int new_properties_size() const;
  inline void clear_new_properties();
  static const int kNewPropertiesFieldNumber = 3;
  inline const ::std::string& new_properties(int index) const;
  inline ::std::string* mutable_new_properties(int index);
  inline void set_new_properties(int index, const ::std::string& value);
  inline void set_new_properties(int index, const char* value);
  inline void set_new_properties(int index, const char* value, size_t size);
  inline ::std::string* add_new_properties();
  inline void add_new_properties(const ::std::string& value);
  inline void add_new_properties(const char* value);
  inline void add_new_properties(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& new_properties() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_new_properties();

  // @@protoc_insertion_point(class_scope:gamer.protocol.PropertyChangedMsgProtocol)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > property_ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> new_properties_;
  ::google::protobuf::uint32 player_id_;
  friend void  protobuf_AddDesc_property_5fchanged_5fmsg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_property_5fchanged_5fmsg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_property_5fchanged_5fmsg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PropertyChangedMsgProtocol* default_instance_;
};
// ===================================================================


// ===================================================================

// PropertyChangedMsgProtocol

// required uint32 player_id = 1;
inline bool PropertyChangedMsgProtocol::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropertyChangedMsgProtocol::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropertyChangedMsgProtocol::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropertyChangedMsgProtocol::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 PropertyChangedMsgProtocol::player_id() const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PropertyChangedMsgProtocol.player_id)
  return player_id_;
}
inline void PropertyChangedMsgProtocol::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:gamer.protocol.PropertyChangedMsgProtocol.player_id)
}

// repeated uint32 property_ids = 2;
inline int PropertyChangedMsgProtocol::property_ids_size() const {
  return property_ids_.size();
}
inline void PropertyChangedMsgProtocol::clear_property_ids() {
  property_ids_.Clear();
}
inline ::google::protobuf::uint32 PropertyChangedMsgProtocol::property_ids(int index) const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PropertyChangedMsgProtocol.property_ids)
  return property_ids_.Get(index);
}
inline void PropertyChangedMsgProtocol::set_property_ids(int index, ::google::protobuf::uint32 value) {
  property_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:gamer.protocol.PropertyChangedMsgProtocol.property_ids)
}
inline void PropertyChangedMsgProtocol::add_property_ids(::google::protobuf::uint32 value) {
  property_ids_.Add(value);
  // @@protoc_insertion_point(field_add:gamer.protocol.PropertyChangedMsgProtocol.property_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PropertyChangedMsgProtocol::property_ids() const {
  // @@protoc_insertion_point(field_list:gamer.protocol.PropertyChangedMsgProtocol.property_ids)
  return property_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PropertyChangedMsgProtocol::mutable_property_ids() {
  // @@protoc_insertion_point(field_mutable_list:gamer.protocol.PropertyChangedMsgProtocol.property_ids)
  return &property_ids_;
}

// repeated string new_properties = 3;
inline int PropertyChangedMsgProtocol::new_properties_size() const {
  return new_properties_.size();
}
inline void PropertyChangedMsgProtocol::clear_new_properties() {
  new_properties_.Clear();
}
inline const ::std::string& PropertyChangedMsgProtocol::new_properties(int index) const {
  // @@protoc_insertion_point(field_get:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
  return new_properties_.Get(index);
}
inline ::std::string* PropertyChangedMsgProtocol::mutable_new_properties(int index) {
  // @@protoc_insertion_point(field_mutable:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
  return new_properties_.Mutable(index);
}
inline void PropertyChangedMsgProtocol::set_new_properties(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
  new_properties_.Mutable(index)->assign(value);
}
inline void PropertyChangedMsgProtocol::set_new_properties(int index, const char* value) {
  new_properties_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
}
inline void PropertyChangedMsgProtocol::set_new_properties(int index, const char* value, size_t size) {
  new_properties_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
}
inline ::std::string* PropertyChangedMsgProtocol::add_new_properties() {
  return new_properties_.Add();
}
inline void PropertyChangedMsgProtocol::add_new_properties(const ::std::string& value) {
  new_properties_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
}
inline void PropertyChangedMsgProtocol::add_new_properties(const char* value) {
  new_properties_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
}
inline void PropertyChangedMsgProtocol::add_new_properties(const char* value, size_t size) {
  new_properties_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PropertyChangedMsgProtocol::new_properties() const {
  // @@protoc_insertion_point(field_list:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
  return new_properties_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PropertyChangedMsgProtocol::mutable_new_properties() {
  // @@protoc_insertion_point(field_mutable_list:gamer.protocol.PropertyChangedMsgProtocol.new_properties)
  return &new_properties_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace gamer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_property_5fchanged_5fmsg_5fprotocol_2eproto__INCLUDED
